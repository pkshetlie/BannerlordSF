security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_ARBITRE: ROLE_USER
        ROLE_DEVELOPPEUR: ROLE_USER
        ROLE_REDACTEUR: ROLE_USER
        ROLE_CASTER: ROLE_USER
        ROLE_ASSO: ROLE_USER
        ROLE_AIDE_CAMP : ROLE_USER
        ROLE_ADMIN: [ROLE_AIDE_CAMP, ROLE_ASSO, ROLE_ARBITRE, ROLE_CASTER, ROLE_DEVELOPPEUR, ROLE_REDACTEUR]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        users:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            anonymous: true
            lazy: true
            provider: users

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true
            guard:
                authenticators:
                    - App\Security\UserPasswordAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/profile, roles: ROLE_USER }
